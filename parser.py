import sys



def parser(filename, columns):
    try:
        file = open(filename, 'r')
    except:
        print("Could not open %s" % (filename))
        exit()

    #####################################
    ## Remove everything before the "."
    #####################################
    col_list = []
    for colname in columns:
        if(colname.find(".")>-1):
            col_list.append(colname.split(".")[1])
        else:
            col_list.append(colname)
    columns = col_list
    #####################################

    lines = file.readlines()	

    row = {}
    for colname in columns:
        row[colname] = -1
        
    for line in lines:
        (name,data) = line.split(":")

        #####################################
        ## Remove everything before the "."
        #####################################
        if(name.find(".")>-1):
            name = name.split(".")[1]
        #####################################
        if(name == "Imports"):
            break
        data = data.strip()
        if(len(data)>2 and data[:2]=="0x"):
            data = int(data, 16)      
        elif(data.isdigit()):
            data = int(data)
        
        if(row.has_key(name)):
            row[name] = data
 
    for i in range(0, len(columns)-1):
        sys.stdout.write(columns[i] + ",");
    sys.stdout.write(columns[len(columns)-1] + "\n");
	
    for i in range(0, len(columns)-1):
        sys.stdout.write(str(row[columns[i]]) + ",");
    sys.stdout.write(str(row[columns[len(columns)-1]]) + "\n");


        





        
    
columns = ['Name' ,'md5', 'FileHeader.Machine', 'FileHeader.SizeOfOptionalHeader', 'FileHeader.Characteristics', 'OptionalHeader64.MajorLinkerVersion', 'OptionalHeader64.MinorLinkerVersion', 'OptionalHeader64.SizeOfCode', 'OptionalHeader64.SizeOfInitializedData', 'OptionalHeader64.SizeOfUninitializedData', 'OptionalHeader64.AddressOfEntryPoint', 'OptionalHeader64.BaseOfCode', 'OptionalHeader64.BaseOfData', 'OptionalHeader64.ImageBase', 'OptionalHeader64.SectionAlignment', 'OptionalHeader64.FileAlignment', 'OptionalHeader64.MajorOperatingSystemVersion', 'OptionalHeader64.MinorOperatingSystemVersion', 'OptionalHeader64.Win32VersionValue', 'OptionalHeader64.SizeOfImage', 'OptionalHeader64.SizeOfHeaders', 'OptionalHeader64.CheckSum', 'OptionalHeader64.Subsystem', 'OptionalHeader64.DllCharacteristics', 'OptionalHeader64.SizeOfStackReserve', 'OptionalHeader64.SizeOfStackCommit', 'OptionalHeader64.SizeOfHeapReserve', 'OptionalHeader64.SizeOfHeapCommit', 'OptionalHeader64.LoaderFlags', 'OptionalHeader64.NumberOfRvaAndSizes']  

parser(sys.argv[1], columns)
